#include <iostream>
#include <string>
#include <algorithm>
using namespace std;

// Convert any base -> decimal
int toDecimal(string num, int base) {
    int value = 0;
    int power = 1;

    for (int i = num.length() - 1; i >= 0; i--) {
        char digit = num[i];
        int d;

        if (digit >= '0' && digit <= '9')
            d = digit - '0';
        else
            d = toupper(digit) - 'A' + 10;

        if (d >= base) {
            cout << "Invalid digit '" << digit << "' for base " << base << endl;
            return -1;
        }

        value += d * power;
        power *= base;
    }
    return value;
}

// Convert decimal -> any base
string fromDecimal(int decimal, int base) {
    if (decimal == 0) return "0";

    string result = "";
    while (decimal > 0) {
        int remainder = decimal % base;
        if (remainder < 10)
            result += (remainder + '0');
        else
            result += (remainder - 10 + 'A');
        decimal /= base;
    }
    reverse(result.begin(), result.end());
    return result;
}

int main() {
    while (true) {
        cout << "\n=== Number System Converter ===\n";
        cout << "1. Decimal -> Binary\n";
        cout << "2. Decimal -> Octal\n";
        cout << "3. Decimal -> Hexadecimal\n";
        cout << "4. Binary -> Decimal\n";
        cout << "5. Octal -> Decimal\n";
        cout << "6. Hexadecimal -> Decimal\n";
        cout << "7. Binary -> Octal\n";
        cout << "8. Binary -> Hexadecimal\n";
        cout << "9. Octal -> Binary\n";
        cout << "10. Octal -> Hexadecimal\n";
        cout << "11. Hexadecimal -> Binary\n";
        cout << "12. Hexadecimal -> Octal\n";
        cout << "0. Exit\n";
        cout << "Choose an option: ";

        int choice;
        cin >> choice;

        if (choice == 0) {
            cout << "Exiting... Goodbye!\n";
            break;
        }

        string num;
        cout << "Enter the number: ";
        cin >> num;

        int decimalValue;
        string result;

        switch (choice) {
            case 1: // Decimal -> Binary
                decimalValue = stoi(num);
                cout << "Binary: " << fromDecimal(decimalValue, 2) << endl;
                break;

            case 2: // Decimal -> Octal
                decimalValue = stoi(num);
                cout << "Octal: " << fromDecimal(decimalValue, 8) << endl;
                break;

            case 3: // Decimal -> Hex
                decimalValue = stoi(num);
                cout << "Hexadecimal: " << fromDecimal(decimalValue, 16) << endl;
                break;

            case 4: // Binary -> Decimal
                cout << "Decimal: " << toDecimal(num, 2) << endl;
                break;

            case 5: // Octal -> Decimal
                cout << "Decimal: " << toDecimal(num, 8) << endl;
                break;

            case 6: // Hex -> Decimal
                cout << "Decimal: " << toDecimal(num, 16) << endl;
                break;

            case 7: // Binary -> Octal
                decimalValue = toDecimal(num, 2);
                cout << "Octal: " << fromDecimal(decimalValue, 8) << endl;
                break;

            case 8: // Binary -> Hex
                decimalValue = toDecimal(num, 2);
                cout << "Hexadecimal: " << fromDecimal(decimalValue, 16) << endl;
                break;

            case 9: // Octal -> Binary
                decimalValue = toDecimal(num, 8);
                cout << "Binary: " << fromDecimal(decimalValue, 2) << endl;
                break;

            case 10: // Octal -> Hex
                decimalValue = toDecimal(num, 8);
                cout << "Hexadecimal: " << fromDecimal(decimalValue, 16) << endl;
                break;

            case 11: // Hex -> Binary
                decimalValue = toDecimal(num, 16);
                cout << "Binary: " << fromDecimal(decimalValue, 2) << endl;
                break;

            case 12: // Hex -> Octal
                decimalValue = toDecimal(num, 16);
                cout << "Octal: " << fromDecimal(decimalValue, 8) << endl;
                break;

            default:
                cout << "Invalid choice! Try again.\n";
        }
    }
    return 0;
}
